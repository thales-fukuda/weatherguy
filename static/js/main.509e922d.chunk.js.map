{"version":3,"sources":["redux/reducers/weather.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","Api.js","components/elements/Geosuggest.js","components/elements/Loading.js","components/elements/Title.js","components/SearchBar/SearchContainer.js","components/SearchBar/SearchBar.js","components/SearchBar/index.js","components/SearchBar/SearchBarWrapper.js","redux/actions.js","components/elements/Text.js","components/blocks/InfoField/InfoField.js","components/blocks/InfoField/index.js","components/WeatherInfo/InfoContainer.js","components/WeatherInfo/WeatherInfo.js","components/WeatherInfo/index.js","components/WeatherInfo/WeatherInfoWrapper.js","GlobalStyle.js","App.js","index.js"],"names":["initialState","city","weatherData","weatherStatus","combineReducers","weather","state","arguments","length","undefined","action","type","Object","objectSpread","payload","data","status","store","createStore","reducer","src_Api","currentWeather","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","axios","url","concat","headers","Accept","stop","styled","Geosuggest","_templateObject","animation","keyframes","Loading_templateObject","Loading","section","_templateObject2","Title","h1","Title_templateObject","SearchContainer","SearchContainer_templateObject","props","isWeatherDisplayed","SearchBar","updateCity","updateWeather","updateWeatherStatus","_useState","useState","_useState2","slicedToArray","isLoadingActive","useIsLoadingActive","handleChange","value","handleUpdateWeather","_ref","asyncToGenerator","mark","Api","sent","t0","console","error","_x","apply","this","react_default","createElement","SearchBar_SearchContainer","elements_Title","types","onChange","e","onSuggestSelect","description","handleSuggestSelect","onKeyDown","key","handleKeyPress","placeholder","elements_Loading","connect","dispatch","Text","p","Text_templateObject","color","fontSize","propTypes","PropTypes","string","defaultProps","InfoField","InfoField_templateObject","InfoContainer","InfoContainer_templateObject","bool","isRequired","WeatherInfo","main","toCelsius","Math","floor","toFahrenheit","WeatherInfo_InfoContainer","Fragment","blocks_InfoField","temp","temp_min","temp_max","wind","speed","humidity","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","App","es","components_SearchBar","components_WeatherInfo","src_GlobalStyle","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.509e922d.chunk.js","sourcesContent":["import { CITY_UPDATED, DATA_UPDATED, WEATHER_STATUS_UPDATED } from '../actionTypes';\n\nconst initialState = {\n  city: '',\n  weatherData: {},\n  weatherStatus: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CITY_UPDATED:\n      return {\n        ...state,\n        city: action.payload.city,\n      };\n\n    case DATA_UPDATED:\n      return {\n        ...state,\n        weatherData: action.payload.data,\n      };\n\n    case WEATHER_STATUS_UPDATED:\n      return {\n        ...state,\n        weatherStatus: action.payload.status,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport weather from './weather';\n\nexport default combineReducers({ weather });\n","export const CITY_UPDATED = 'CITY_UPDATED';\nexport const DATA_UPDATED = 'DATA_UPDATED';\nexport const WEATHER_STATUS_UPDATED = 'WEATHER_STATUS_UPDATED';\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import axios from 'axios';\n\nconst ID = 'fac9a302f3d95aafe7a9f7d7596aff1f';\n\nclass Api {\n  currentWeather = async city => axios(\n    {\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${ID}`,\n      headers: {\n        Accept: 'application/json',\n      },\n    },\n  );\n}\n\nexport default new Api();\n","import styled from 'styled-components';\nimport Geosuggest from 'react-geosuggest';\n\nexport default styled(Geosuggest)`\n  margin-top: 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: 1s ease all;\n  z-index: 2;\n  .geosuggest {\n    &__input {\n      &-wrapper{\n        display: flex;\n        justify-content: center;\n      }\n      height: 40px;\n      width: 300px;\n      padding: 15px;\n      font-size: 18px;\n      color: #f2f2f2;\n      border: none;\n      border-radius: 19px;\n      background: rgba(255, 255, 255, .1);\n      box-sizing: border-box;\n      &:focurs {\n        color: #f2f2f2;\n      }\n      &::placeholder {\n        color: #f2f2f2;\n        opacity: .22;\n      }\n    }\n    &__suggests{\n      width: 300px;\n      padding: 5px;\n      list-style: none;\n      background-color: #ededed;\n      color: #2e2e2e;\n      border-radius: 5px;\n      &-wrapper {\n        position: absolute;\n        top: 90px;\n        display: flex;\n        justify-content: flex-start;\n        box-sizing: border-box;\n      }\n      &--hidden {\n        max-height: 0;\n        overflow: hidden;\n        border-width: 0;\n        display: none;\n      }\n    }\n    &__item {\n      padding: 10px 5px;\n      box-sizing: border-box;\n      &--active {\n        background: #2e2e2e;\n        color: #ededed;\n      }\n    }\n  }\n\n`;\n","import styled, { keyframes } from 'styled-components';\n\nconst animation = keyframes`\n  to {\n    opacity: 0.1;\n    transform: translate3d(0, -1rem, 0);\n  }\n`;\n\nconst Loading = styled.section`\n  display: flex;\n  justify-content: center;\n  div {\n    width: 1rem;\n    height: 1rem;\n    margin: 3rem 0.2rem;\n    background: #eaeaea;\n    border-radius: 50%;\n    animation: ${animation} 0.6s infinite alternate;\n  }\n  div:nth-child(2) {\n    animation-delay: 0.2s;\n  }\n  div:nth-child(3) {\n    animation-delay: 0.4s;\n  }\n`;\n\nexport default Loading;\n","import styled from 'styled-components';\n\nconst Title = styled.h1`\n  color: #ededed;\n  transition: 1s ease all;\n`;\n\nexport default Title;\n","import styled from 'styled-components';\n\nconst SearchContainer = styled.section`\n  position: absolute;\n  top: ${props => (props.isWeatherDisplayed ? '25%' : '35%')};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: 1s ease all;\n`;\n\nexport default SearchContainer;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Api from '../../Api';\n\nimport Geosuggest from '../elements/Geosuggest';\nimport Loading from '../elements/Loading';\nimport Title from '../elements/Title';\n\nimport SearchContainer from './SearchContainer';\n\nconst SearchBar = (props) => {\n  const {\n    city,\n    weatherStatus,\n    updateCity,\n    updateWeather,\n    updateWeatherStatus,\n  } = props;\n\n  const [isLoadingActive, useIsLoadingActive] = useState(false);\n\n  const handleChange = (value) => {\n    updateCity(value);\n  };\n\n  const handleUpdateWeather = async (value) => {\n    try {\n      useIsLoadingActive(true);\n      const data = await Api.currentWeather(value);\n      useIsLoadingActive(false);\n      updateWeatherStatus(true);\n      updateWeather(data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSuggestSelect = (value) => {\n    if (value) {\n      handleChange(value.description);\n      handleUpdateWeather(value.description);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleUpdateWeather(city);\n    }\n  };\n\n  return (\n    <SearchContainer isWeatherDisplayed={weatherStatus}>\n      <Title>Weatherguy</Title>\n      <Geosuggest\n        types={['(cities)']}\n        onChange={e => handleChange(e)}\n        onSuggestSelect={value => handleSuggestSelect(value)}\n        onKeyDown={e => handleKeyPress(e)}\n        placeholder='search for a city...'\n        value={city}\n      />\n      {\n        isLoadingActive\n        && (\n          <Loading>\n            <div />\n            <div />\n            <div />\n          </Loading>\n        )\n      }\n    </SearchContainer>\n  );\n};\n\nSearchBar.propTypes = {\n  city: PropTypes.string.isRequired,\n  weatherStatus: PropTypes.bool.isRequired,\n  updateCity: PropTypes.func.isRequired,\n  updateWeather: PropTypes.func.isRequired,\n  updateWeatherStatus: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import SearchBar from './SearchBarWrapper';\n\nexport default SearchBar;\n","import { connect } from 'react-redux';\nimport { updateCity, updateWeather, updateWeatherStatus } from '../../redux/actions';\nimport SearchBar from './SearchBar';\n\nconst mapStateToProps = state => ({\n  city: state.weather.city,\n  weatherStatus: state.weather.weatherStatus,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCity: city => dispatch(updateCity(city)),\n  updateWeather: city => dispatch(updateWeather(city)),\n  updateWeatherStatus: status => dispatch(updateWeatherStatus(status)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SearchBar);\n","import { CITY_UPDATED, DATA_UPDATED, WEATHER_STATUS_UPDATED } from './actionTypes';\n\n\n/**\n * Simple actions\n */\n\n/**\n * Update active city.\n * @param city\n */\nexport const updateCity = city => ({\n  type: CITY_UPDATED,\n  payload: {\n    city,\n  },\n});\n\n/**\n * Update current city data.\n * @param data\n */\nexport const updateWeather = data => ({\n  type: DATA_UPDATED,\n  payload: {\n    data,\n  },\n});\n\n/**\n * Update weather status\n * @param status\n */\nexport const updateWeatherStatus = status => ({\n  type: WEATHER_STATUS_UPDATED,\n  payload: {\n    status,\n  },\n});\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Text = styled.p`\n  text-align: center;\n  margin-bottom: 5px;\n  color: ${props => props.color};\n  font-weight: 300;\n  font-size: ${props => props.fontSize};\n`;\n\nText.propTypes = {\n  fontSize: PropTypes.string,\n};\n\nText.defaultProps = {\n  color: '#ededed',\n  fontSize: '18px',\n};\n\nexport default Text;\n","import styled from 'styled-components';\nimport Text from '../../elements/Text';\n\nconst InfoField = styled.section`\n  span {\n    opacity: .5;\n    color: #ededed;\n  }\n`;\n\nInfoField.Text = Text;\n\nexport default InfoField;\n","import InfoField from './InfoField';\n\nexport default InfoField;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst InfoContainer = styled.section`\n  width: 230px;\n  margin-top: 15%;\n  padding: 15px;\n  border: 1px solid rgba(237, 237, 237, .6);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  opacity: ${props => (props.isWeatherDisplayed ? '1' : '0')};\n  transition: 1s ease opacity;\n  transition-delay: .5s;\n  z-index: 1;\n\n  @media (min-width: 720px) {\n    margin-top: 5%;\n  }\n`;\n\nInfoContainer.propTypes = {\n  isWeatherDisplayed: PropTypes.bool.isRequired,\n};\n\nexport default InfoContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InfoField from '../blocks/InfoField';\nimport InfoContainer from './InfoContainer';\n\nconst WeatherInfo = (props) => {\n  const {\n    weatherData,\n    weatherStatus,\n  } = props;\n\n  const weather = weatherData.main;\n\n  const toCelsius = value => Math.floor(value - 273.15);\n  const toFahrenheit = value => Math.floor(toCelsius(value) * 9 / 5 + 32);\n\n  return (\n    <InfoContainer isWeatherDisplayed={weatherStatus}>\n      {\n        weatherData.main\n        && (\n        <>\n          <InfoField>\n            <InfoField.Text>\n              Temperature:\n              <span>\n                { `\\u00A0\\u00A0${toCelsius(weather.temp)} °C\\u00A0\\u00A0/\\u00A0\\u00A0${toFahrenheit(weather.temp)} °F` }\n              </span>\n            </InfoField.Text>\n          </InfoField>\n\n          <InfoField>\n            <InfoField.Text color='rgba(130, 178, 242, .5)'>\n              Min:\n              <span>\n                {`\\u00A0\\u00A0${toCelsius(weather.temp_min)} °C\\u00A0\\u00A0/\\u00A0\\u00A0${toFahrenheit(weather.temp_min)} °F`}\n              </span>\n            </InfoField.Text>\n          </InfoField>\n\n          <InfoField>\n            <InfoField.Text color='rgba(235, 86, 86, .5)'>\n              Max:\n              <span>\n                {`\\u00A0\\u00A0${toCelsius(weather.temp_max)} °C\\u00A0\\u00A0/\\u00A0\\u00A0${toFahrenheit(weather.temp_max)} °F`}\n              </span>\n            </InfoField.Text>\n          </InfoField>\n\n          <InfoField>\n            <InfoField.Text>\n              Wind:\n              <span>\n                {`\\u00A0\\u00A0${weatherData.wind.speed} m/s`}\n              </span>\n            </InfoField.Text>\n          </InfoField>\n\n          <InfoField>\n            <InfoField.Text>\n              Humidity:\n              <span>\n                {`\\u00A0\\u00A0${weather.humidity} %`}\n              </span>\n            </InfoField.Text>\n          </InfoField>\n        </>\n        )\n      }\n    </InfoContainer>\n  );\n};\n\nWeatherInfo.propTypes = {\n  weatherData: PropTypes.instanceOf(Object).isRequired,\n  weatherStatus: PropTypes.bool.isRequired,\n};\n\nexport default WeatherInfo;\n","import WeatherInfo from './WeatherInfoWrapper';\n\nexport default WeatherInfo;\n","import { connect } from 'react-redux';\nimport WeatherInfo from './WeatherInfo';\n\nconst mapStateToProps = state => ({\n  city: state.weather.city,\n  weatherData: state.weather.weatherData,\n  weatherStatus: state.weather.weatherStatus,\n});\n\nexport default connect(\n  mapStateToProps,\n)(WeatherInfo);\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Lato:300,400,700|Slabo+27px');\n\n  * {\n    margin: 0;\n    padding: 0;\n    font-family: 'Lato';\n  };\n\n  body {\n    height: 100vh;\n    background-color: #2E2E2E;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  #root {\n    height: 80%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport SearchBar from './components/SearchBar';\nimport WeatherInfo from './components/WeatherInfo';\n\nimport GlobalStyle from './GlobalStyle';\n\nconst App = () => (\n  <Provider store={store}>\n    <SearchBar />\n    <WeatherInfo />\n    <GlobalStyle />\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}